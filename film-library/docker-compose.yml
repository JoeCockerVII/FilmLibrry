version: '3'
services:

  db-flib:
    image: "postgres:13"
    container_name: 'db-flib'
    ports:
      - "5430:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=db

  eureka-server-flib:
    container_name: 'eureka-server-flib'
    build:
      context: .
      dockerfile: eureka-server/Dockerfile
    ports:
      - "8761:8761"

  watchlist-server:
    container_name: 'watchlist-server'
    build:
      context: .
      dockerfile: watchlist-server/Dockerfile
    ports:
      - "8090:8090"
    # Эти свойства перегружают соответствующие в application.yml
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-flib:5432/db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - eureka.client.register-with-eureka=true
      - eureka.client.fetch-registry=true
      - eureka.client.service-url.defaultZone=http://eureka-server-flib:8761/eureka/
      - eureka.instance.prefer-ip-address=true
      - spring.kafka.bootstrap-servers=broker:9094
      - spring.kafka.producer.bootstrap-servers=broker:9094
    depends_on:
      - db-flib
      - eureka-server-flib
      - broker


  film-server:
    container_name: 'film-server'
    build:
      context: .
      dockerfile: film-server/Dockerfile
    ports:
      - "8100:8100"
    # Эти свойства перегружают соответствующие в application.yml
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-flib:5432/db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - eureka.client.register-with-eureka=true
      - eureka.client.fetch-registry=true
      - eureka.client.service-url.defaultZone=http://eureka-server-flib:8761/eureka/
      - eureka.instance.prefer-ip-address=true
    depends_on:
      - db-flib
      - eureka-server-flib


  watch-film-stat-server:
    container_name: 'watch-film-stat-server'
    build:
      context: .
      dockerfile: watch-film-stat-server/Dockerfile
    ports:
      - "8150:8150"
    # Эти свойства перегружают соответствующие в application.yml
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-flib:5432/db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - eureka.client.register-with-eureka=true
      - eureka.client.fetch-registry=true
      - eureka.client.service-url.defaultZone=http://eureka-server-flib:8761/eureka/
      - eureka.instance.prefer-ip-address=true
      - spring.kafka.bootstrap-servers=broker:9094
      - spring.kafka.consumer.bootstrap-servers=broker:9094
    depends_on:
      - db-flib
      - eureka-server-flib
      - broker


  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zookeeper-flib
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.0
    container_name: kafka-flib
    ports:
      - "9092:9092"
      - "9094:9094"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1